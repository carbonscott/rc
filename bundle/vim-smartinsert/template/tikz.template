template |main|
\documentclass[border=3pt,tikz]{standalone}

% Import tikz
\usepackage{tikz}

% Load tikz features
\usetikzlibrary{math,angles,quotes,intersections,calc}

% Configure tikz
\tikzset{
    font = {\fontsize{18pt}{24pt}\selectfont}
}

% Import other packages for figure-making purposes
\usepackage{xcolor}
\usepackage{amsmath}

% Set up layers
\pgfdeclarelayer{ruler}
\pgfsetlayers{main,ruler}

\begin{document}

    \begin{tikzpicture}[x=1in, y=1in, z=1in]

        ____

    \end{tikzpicture}

\end{document}
endtemplate


template |draw.line.simple|
\draw (__A__) -- (__B__);
endtemplate


template |draw.line.arrow|
\draw [->] (__A__) -- (__B__);
endtemplate


template |draw.grid|
\def \widthDoc      {8.5}
\def \heightDoc     {10}
\newcommand* \halfWidthDoc  {\widthDoc  / 2}
\newcommand* \halfHeightDoc {\heightDoc / 2}
\begin{pgfonlayer}{ruler}
    \draw[step=.5in,color=gray!20, style=very thin] 
        (-\halfWidthDoc,-\halfHeightDoc) grid (\halfWidthDoc,
        \halfHeightDoc);
\end{pgfonlayer}
endtemplate


template |draw.circle.simple|
\draw (__0,0__) circle [radius=__1__];
endtemplate


template |draw.circle.through|
\node [draw,circle through=(__through_point__)] at (__center__) {};
endtemplate


template |draw.arc|
\draw (__0,0__) arc [start angle=__0__, end angle=__30__, radius=__2__];
endtemplate


template |draw.rectangle|
\draw (__0,0__) rectangle (__1,1__)
endtemplate


template |example.partway|
\coordinate [] (__name__)  at ($ (____) !__splitRatio__! (____) $);
endtemplate


template |def.coordinate|
\coordinate [__label=left:$A$__] (__A__) at (__0,0__);
endtemplate


template |def.node|
\node [__label=left:$A$__] at (____) {__text__};
endtemplate


template |style.arrow.partway|
% Use it like an option: `->-=.5`
\tikzset{->-/.style={decoration={markings, mark=at position #1 with {\arrow{>}}},postaction={decorate}}}
endtemplate


template |math.expr|
\pgfmathsetmacro __\var__ {__calculation__}
endtemplate


template |math.if|
\pgfmathsetmacro \__okShowTextNAngleHarder__ {ifthenelse(__180 - \angleHardNegative>\minAngleText__,"{__\color{red}harder}__","{}")}
endtemplate


template |set.layer.declare|
\pgfdeclarelayer{__background__}
endtemplate


template |set.layer.order|
\pgfsetlayers{__background__, __main__}
endtemplate


template |set.layer.apply|
\begin{pgfonlayer}{__layer name__}
    ____
\end{pgfonlayer}
endtemplate


template |tex.def.color|
\definecolor{__my color__}{HTML}{__fffafa__}
endtemplate
