let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <S-Tab> <Plug>SuperTabBackward
inoremap <silent> <C-Tab> =UltiSnips#ListSnippets()
inoremap <F8> :set nolist
inoremap <F7> :set list
map! <D-v> *
nnoremap  
snoremap <silent>  c
xnoremap  2h
nnoremap  2h
xnoremap <silent> 	 :call UltiSnips#SaveLastVisualSelection()gvs
snoremap <silent> 	 :call UltiSnips#ExpandSnippetOrJump()
vnoremap <NL> 2j
nnoremap <NL> 2j
vnoremap  2k
nnoremap  2k
vnoremap  2l
nnoremap  2l
nnoremap  :w
snoremap  "_c
vnoremap + zf
nnoremap + zf
nnoremap - zc
nnoremap = zo
vnoremap H 0
nnoremap H 0
vnoremap L g_
nnoremap L g_
nnoremap [m :call vmisc#VirtualEdit()
vnoremap [fl :call cj#vrwrapper("t")
vnoremap [fh :call cj#vrwrapper("h")
vnoremap [el :call cj#vlwrapper("t")
vnoremap [eh :call cj#vlwrapper("h")
vnoremap [e :echo " Try [ff, if you're trying to search."
vnoremap [f :echo " Try [ff, if you're trying to search."
nnoremap [fl :call cj#rjumper("t")
nnoremap [fh :call cj#rjumper("h")
nnoremap [el :call cj#ljumper("t")
nnoremap [eh :call cj#ljumper("h")
nnoremap [e :echo " Try [ff, if you're trying to search."
nnoremap [f :echo " Try [ff, if you're trying to search."
vnoremap [g/ :call wordsubstitute#run3()nN
vnoremap [gc :call wordsubstitute#run2()
vnoremap [gg :call wordsubstitute#run1()
vnoremap [hd :call blockjumper_omitspace#down()
nnoremap [hd :call blockjumper_omitspace#down()
vnoremap [hu :call blockjumper_omitspace#up()
nnoremap [hu :call blockjumper_omitspace#up()
vnoremap [gv j:call blockjumper#visual()
nnoremap [gv :call blockjumper#visual()
nnoremap [gd :call blockjumper#down()
nnoremap [gu :call blockjumper#up()
vnoremap [o :call quote#fun2()
nnoremap <silent> [aa :CtrlP
nnoremap [al :CtrlPLine
nnoremap [af :CtrlPMixed
nnoremap [ab :CtrlPBuffer
nnoremap [s a    
vnoremap [5 0
vnoremap [4 9
vnoremap [3 8
vnoremap [2 7
vnoremap [1 6
nnoremap [5 0
nnoremap [4 9
nnoremap [3 8
nnoremap [2 7
nnoremap [1 6
nnoremap [ :.cc
nnoremap [cw :cw:setlocal nornu
nnoremap [bb :BuffersToggle
nnoremap <silent> [ul yypv0$r-
nnoremap <silent> [bx :q
nnoremap <silent> [bd :bd
nnoremap <silent> [q :rightbelow 13 split ~/.vim/mindnote.mdk
nnoremap [vw bve
noremap [du :diffupdate
noremap [p :tabp
noremap [n :tabn
noremap [t :tabnew
noremap [cp :cprevious
noremap [cn :cnext
noremap [cl :clist
vnoremap _ zd
nnoremap _ zd
vmap gx <Plug>NetrwBrowseXVis
nmap gx <Plug>NetrwBrowseX
vnoremap <Down> :call moveblock#swapline('down')
vnoremap <Up> :call moveblock#swapline('up'):normal! gvkoko
vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())
snoremap <silent> <Del> c
snoremap <silent> <BS> c
snoremap <silent> <C-Tab> :call UltiSnips#ListSnippets()
nnoremap <F5> :!./%
nnoremap <silent> <C-Up> :resize +2
nnoremap <silent> <C-Down> :resize -2
nnoremap <silent> <C-Left> :vertical resize -2
nnoremap <silent> <C-Right> :vertical resize +2
noremap <F3> :bn
noremap <F2> :bp
noremap <F4> :ls:buffer 
noremap <F8> :set nolist
noremap <F7> :set list
noremap <F10> :set nohlsearch
noremap <F9> :set hlsearch
xmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
inoremap  b
inoremap  ea
inoremap  
inoremap  i
inoremap <silent> 	 =UltiSnips#ExpandSnippetOrJump()
inoremap <NL> j
inoremap  k
inoremap  a
abbr perl Perl
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set background=dark
set backspace=indent,eol,start
set fileencodings=ucs-bom,utf-8,default,latin1
set helplang=en
set laststatus=0
set listchars=tab:â–¸~,eol:Â¬
set matchpairs=(:),{:},[:],<:>
set mouse=a
set ruler
set runtimepath=~/.vim,~/.vim/bundle/Vundle.vim,~/.vim/bundle/ultisnips,~/.vim/bundle/supertab,~/.vim/bundle/vim-snippets,~/.vim/bundle/syntastic,~/.vim/bundle/vim-colorschemes,~/.vim/bundle/tabular,~/.vim/bundle/ctrlp.vim,~/.vim/bundle/dracula-theme/vim/,~/.vim/bundle/taglist.vim,/opt/local/share/vim/vimfiles,/opt/local/share/vim/vim74,/opt/local/share/vim/vimfiles/after,~/.vim/after,~/.vim/bundle/vim-quote,~/.vim/bundle/vim-blockjumper,~/.vim/bundle/vim-wordsubstitute,~/.vim/bundle/vim-currentline-jump,~/.vim/bundle/vim-misc,~/.vim/bundle/Vundle.vim,~/.vim/bundle/Vundle.vim/after,~/.vim/bundle/ultisnips/after,~/.vim/bundle/supertab/after,~/.vim/bundle/vim-snippets/after,~/.vim/bundle/syntastic/after,~/.vim/bundle/vim-colorschemes/after,~/.vim/bundle/tabular/after,~/.vim/bundle/ctrlp.vim/after,~/.vim/bundle/dracula-theme/vim//after,~/.vim/bundle/taglist.vim/after
set shiftwidth=4
set softtabstop=4
set statusline=%F%#warningmsg#%{SyntasticStatuslineFlag()}%*
set tabstop=4
set virtualedit=all
set wildmenu
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/.vim/bundle/vim-move-block/autoload
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 moveblock.vim
argglobal
silent! argdel *
argadd moveblock.vim
edit moveblock.vim
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
vnoremap <buffer> <silent> [" :exe "normal! gv"|call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")
nnoremap <buffer> <silent> [" :call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")
vnoremap <buffer> <silent> [] m':exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "bW")
nnoremap <buffer> <silent> [] m':call search('^\s*endf*\%[unction]\>', "bW")
vnoremap <buffer> <silent> [[ m':exe "normal! gv"|call search('^\s*fu\%[nction]\>', "bW")
nnoremap <buffer> <silent> [[ m':call search('^\s*fu\%[nction]\>', "bW")
vnoremap <buffer> <silent> ]" :exe "normal! gv"|call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")
nnoremap <buffer> <silent> ]" :call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")
vnoremap <buffer> <silent> ][ m':exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "W")
nnoremap <buffer> <silent> ][ m':call search('^\s*endf*\%[unction]\>', "W")
vnoremap <buffer> <silent> ]] m':exe "normal! gv"|call search('^\s*fu\%[nction]\>', "W")
nnoremap <buffer> <silent> ]] m':call search('^\s*fu\%[nction]\>', "W")
setlocal autoindent
setlocal backupcopy=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:\"\ -,mO:\"\ \ ,eO:\"\",:\"
setlocal commentstring=\"%s
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'vim'
setlocal filetype=vim
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=GetVimIndent()
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e,=end,=else,=cat,=fina,=END,0\\
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,#
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'vim'
setlocal syntax=vim
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tags=
setlocal textwidth=78
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
59,73fold
80,91fold
let s:l = 56 - ((20 * winheight(0) + 22) / 45)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
56
normal! 0
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
